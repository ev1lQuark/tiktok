type (
	LoginOrRegisterReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginOrRegisterReply {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}

	UserInfoReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	UserInfoReply {
		StautsCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		User       *User  `json:"user"`
	}

	User {
		ID              int64  `json:"id"`
		Name            string `json:"name"`
		FollowCount     int64  `json:"follow_count"`
		FollowerCount   int64  `json:"follower_count"`
		IsFollow        bool   `json:"is_follow"`
		Avatar          string `json:"avatar"`
		BackgroundImage string `json:"background_image"`
		Signature       string `json:"signature"`
		TotalFavorited  string `json:"total_favorited"`
		WorkCount       int64  `json:"work_count"`
		FavoriteCount   int64  `json:"favorite_count"`
	}
)

@server(
	prefix: douyin
)
service user-api {
	@handler login
	post /user/login (LoginOrRegisterReq) returns (LoginOrRegisterReply)
	
	@handler register
	post /user/register (LoginOrRegisterReq) returns (LoginOrRegisterReply)
	
	@handler userInfo
	get /user (UserInfoReq) returns (UserInfoReply)
}