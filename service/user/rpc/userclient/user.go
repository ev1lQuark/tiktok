// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"github.com/ev1lQuark/tiktok/service/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdListReq     = user.IdListReq
	NameListReply = user.NameListReply

	User interface {
		GetNames(ctx context.Context, in *IdListReq, opts ...grpc.CallOption) (*NameListReply, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetNames(ctx context.Context, in *IdListReq, opts ...grpc.CallOption) (*NameListReply, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetNames(ctx, in, opts...)
}
