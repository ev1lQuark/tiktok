// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package server

import (
	"context"

	"github.com/ev1lQuark/tiktok/service/like/rpc/internal/logic"
	"github.com/ev1lQuark/tiktok/service/like/rpc/internal/svc"
	"github.com/ev1lQuark/tiktok/service/like/rpc/types/like"
)

type LikeServer struct {
	svcCtx *svc.ServiceContext
	like.UnimplementedLikeServer
}

func NewLikeServer(svcCtx *svc.ServiceContext) *LikeServer {
	return &LikeServer{
		svcCtx: svcCtx,
	}
}

// 根据userId获取本账号所发视频获赞总数
func (s *LikeServer) GetFavoriteCountByAuthorIds(ctx context.Context, in *like.GetFavoriteCountByAuthorIdsReq) (*like.GetFavoriteCountByAuthorIdsReply, error) {
	l := logic.NewGetFavoriteCountByAuthorIdsLogic(ctx, s.svcCtx)
	return l.GetFavoriteCountByAuthorIds(in)
}

// 根据userId获取本账号喜欢（点赞）总数
func (s *LikeServer) GetFavoriteCountByUserIds(ctx context.Context, in *like.GetFavoriteCountByUserIdsReq) (*like.GetFavoriteCountByUserIdsReply, error) {
	l := logic.NewGetFavoriteCountByUserIdsLogic(ctx, s.svcCtx)
	return l.GetFavoriteCountByUserIds(in)
}

// 根据videoId获取视频点赞总数
func (s *LikeServer) GetFavoriteCountByVideoIds(ctx context.Context, in *like.GetFavoriteCountByVideoIdsReq) (*like.GetFavoriteCountByVideoIdsReply, error) {
	l := logic.NewGetFavoriteCountByVideoIdsLogic(ctx, s.svcCtx)
	return l.GetFavoriteCountByVideoIds(in)
}

// 根据userId和videoId判断是否点赞
func (s *LikeServer) IsFavorite(ctx context.Context, in *like.IsFavoriteReq) (*like.IsFavoriteReply, error) {
	l := logic.NewIsFavoriteLogic(ctx, s.svcCtx)
	return l.IsFavorite(in)
}
