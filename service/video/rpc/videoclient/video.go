// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoclient

import (
	"context"

	"github.com/ev1lQuark/tiktok/service/video/rpc/types/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthorIdReq    = video.AuthorIdReq
	VideoIdReq     = video.VideoIdReq
	VideoInfoReply = video.VideoInfoReply
	VideoNumReply  = video.VideoNumReply

	Video interface {
		GetVideoByVideoId(ctx context.Context, in *VideoIdReq, opts ...grpc.CallOption) (*VideoInfoReply, error)
		GetVideoNumByAuthorId(ctx context.Context, in *AuthorIdReq, opts ...grpc.CallOption) (*VideoNumReply, error)
	}

	defaultVideo struct {
		cli zrpc.Client
	}
)

func NewVideo(cli zrpc.Client) Video {
	return &defaultVideo{
		cli: cli,
	}
}

func (m *defaultVideo) GetVideoByVideoId(ctx context.Context, in *VideoIdReq, opts ...grpc.CallOption) (*VideoInfoReply, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetVideoByVideoId(ctx, in, opts...)
}

func (m *defaultVideo) GetVideoNumByAuthorId(ctx context.Context, in *AuthorIdReq, opts ...grpc.CallOption) (*VideoNumReply, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetVideoNumByAuthorId(ctx, in, opts...)
}
